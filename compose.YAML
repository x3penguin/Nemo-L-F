version: '3'
services:
  frontend:
    container_name: frontend
    build: 
      context: ./frontend
      dockerfile: frontend.Dockerfile
    env_file: ./frontend/.env
    image: nemo/frontend:1.0
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - storage
      - user
      - match
      - logistics

  logistics:
    container_name: logistics
    build: 
      context: ./logistics
      dockerfile: logistics.Dockerfile
    env_file: ./logistics/.env
    image: nemo/logistics:1.0
    restart: unless-stopped
    ports:
      - "3010:3000"


  match:
    container_name: match
    build: 
      context: ./match
      dockerfile: match.Dockerfile
    env_file: ./match/.env
    image: nemo/match:1.0
    restart: unless-stopped
    ports:
      - "3002:3000"
    depends_on:
      - storage

  payment:
    container_name: payment
    build: 
      context: ./payment
      dockerfile: payment.Dockerfile
    env_file: ./payment/.env
    image: nemo/payment:1.0
    restart: unless-stopped
    ports:
      - "3003:3000"


  storage:
    container_name: storage
    build: 
      context: ./storage
      dockerfile: storage.Dockerfile
    env_file: ./storage/.env
    image: nemo/storage:1.0
    restart: unless-stopped
    ports:
      - "3000:3000"

  user:
    container_name: user
    build: 
      context: ./user
      dockerfile: user.Dockerfile
    env_file: ./user/.env
    image: nemo/user:1.0
    restart: unless-stopped
    ports:
      - "3004:3000"

  location:
    container_name: location
    build: 
      context: ./location
      dockerfile: location.Dockerfile
    env_file: ./location/.env
    image: nemo/location:1.0
    restart: unless-stopped
    ports:
      - "3005:3000"
